function [cost, err_mat] = getCostv4(tm1, ym1, ym2, ym3, ym4, ym5, ...
    ty_m1, ty_m2, ty_m3, ty_m4, ty_m5, V, convFac, ...
    i_taus, normWeight)
%Calculates the cost for a single experiment, taking as input simulations, 
%data, volume & conversion (to real numbers), indices for the relevant data
%points, and a normalization matrix. Calculates the weighted residuals.

err_mat = zeros(15, length(i_taus));

%Find time indices that correspond to data.
taus = zeros(length(i_taus), 1);
taus_index = 1;
for j = ty_m1(i_taus, 1)'
    [~, taus(taus_index)] = min(abs(tm1-j));
    taus_index = taus_index +1;
end

scaled_index = 1;
for j = transpose(taus)
    %cI--------------------------------------------------------------------
    %MOI = 1
    err_mat(1, scaled_index) = ...
        normWeight(1, scaled_index)*heaviSideTrue(ty_m1(i_taus(scaled_index), 5)-eps)*...
        ( ym1(j, 1)*V(j)/convFac - ...
        ty_m1(i_taus(scaled_index), 2) );
    %MOI = 2
    err_mat(2, scaled_index) = ...
        normWeight(2, scaled_index)*heaviSideTrue(ty_m2(i_taus(scaled_index), 5)-eps)*...
        ( ym2(j, 1)*V(j)/convFac - ...
        ty_m2(i_taus(scaled_index), 2) );
    %MOI = 3
    err_mat(3, scaled_index) = ...
        normWeight(3, scaled_index)*heaviSideTrue(ty_m3(i_taus(scaled_index), 5)-eps)*...
        ( ym3(j, 1)*V(j)/convFac - ...
        ty_m3(i_taus(scaled_index), 2) );
    %MOI = 4
    err_mat(4, scaled_index) = ...
        normWeight(4, scaled_index)*heaviSideTrue(ty_m4(i_taus(scaled_index), 5)-eps)*...
        ( ym4(j, 1)*V(j)/convFac - ...
        ty_m4(i_taus(scaled_index), 2) );
    %MOI = 5
    err_mat(5, scaled_index) = ...
        normWeight(5, scaled_index)*heaviSideTrue(ty_m5(i_taus(scaled_index), 5)-eps)*...
        ( ym5(j, 1)*V(j)/convFac - ...
        ty_m5(i_taus(scaled_index), 2) );
    
    %cro-------------------------------------------------------------------
    %MOI = 1
    err_mat(6, scaled_index) = ...
        normWeight(6, scaled_index)*heaviSideTrue(ty_m1(i_taus(scaled_index), 6)-eps)*...
        ( ym1(j, 2)*V(j)/convFac - ...
        ty_m1(i_taus(scaled_index), 3) );  
    %MOI = 2
    err_mat(7, scaled_index) = ...
        normWeight(7, scaled_index)*heaviSideTrue(ty_m2(i_taus(scaled_index), 6)-eps)*...
        ( ym2(j, 2)*V(j)/convFac - ...
        ty_m2(i_taus(scaled_index), 3) );
    %MOI = 3
    err_mat(8, scaled_index) = ...
        normWeight(8, scaled_index)*heaviSideTrue(ty_m3(i_taus(scaled_index), 6)-eps)*...
        ( ym3(j, 2)*V(j)/convFac - ...
        ty_m3(i_taus(scaled_index), 3) );
    %MOI = 4
    err_mat(9, scaled_index) = ...
        normWeight(9, scaled_index)*heaviSideTrue(ty_m4(i_taus(scaled_index), 6)-eps)*...
        ( ym4(j, 2)*V(j)/convFac - ...
        ty_m4(i_taus(scaled_index), 3) );
    %MOI = 5
    err_mat(10, scaled_index) = ...
        normWeight(10, scaled_index)*heaviSideTrue(ty_m5(i_taus(scaled_index), 6)-eps)*...
        ( ym5(j, 2)*V(j)/convFac - ...
        ty_m5(i_taus(scaled_index), 3) );
    
    %cII-------------------------------------------------------------------
    %MOI = 1
    err_mat(11, scaled_index) = ...
        normWeight(11, scaled_index)*heaviSideTrue(ty_m1(i_taus(scaled_index), 7)-eps)*...
        ( ym1(j, 3)*V(j)/convFac - ...
        ty_m1(i_taus(scaled_index), 4) );  
    %MOI = 2
    err_mat(12, scaled_index) = ...
        normWeight(12, scaled_index)*heaviSideTrue(ty_m2(i_taus(scaled_index), 7)-eps)*...
        ( ym2(j, 3)*V(j)/convFac - ...
        ty_m2(i_taus(scaled_index), 4) );
    %MOI = 3
    err_mat(13, scaled_index) = ...
        normWeight(13, scaled_index)*heaviSideTrue(ty_m3(i_taus(scaled_index), 7)-eps)*...
        ( ym3(j, 3)*V(j)/convFac - ...
        ty_m3(i_taus(scaled_index), 4) );
    %MOI = 4
    err_mat(14, scaled_index) = ...
        normWeight(14, scaled_index)*heaviSideTrue(ty_m4(i_taus(scaled_index), 7)-eps)*...
        ( ym4(j, 3)*V(j)/convFac - ...
        ty_m4(i_taus(scaled_index), 4) );
    %MOI = 5
    err_mat(15, scaled_index) = ...
        normWeight(15, scaled_index)*heaviSideTrue(ty_m5(i_taus(scaled_index), 7)-eps)*...
        ( ym5(j, 3)*V(j)/convFac - ...
        ty_m5(i_taus(scaled_index), 4) );
 
    scaled_index = scaled_index + 1;
end

% %Rescale by number of observations
% err_mat = err_mat./length(taus);

cost = sum(sum(err_mat.^2));

end